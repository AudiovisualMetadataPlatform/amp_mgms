# This is the default test suite -- local tools
- name: Applause Detection
  tool: applause_detection.xml
  inputs:
    input_audio: audio.mp3
  params:
    min_segment_duration: 3000
  outputs:
    amp_applause_segments:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: [segments, label, start, end]}      

- name: Contact Sheets - shot
  tool: contact_sheets.xml
  inputs:
    input_video: video.m4v
    amp_shots: amp_shots.json
  params:
    type: shot
    amp_faces: none
    frame_seconds: 0
    frame_quantity: 0
    number_of_columns: 4
    photo_width: 300
    margin: 10
    padding: 3
  outputs:
    contact_sheet:
      - {test: magic, mime: image/png}

- name: Contact Sheets - time
  tool: contact_sheets.xml
  inputs:
    input_video: video.m4v    
  params:
    type: time
    amp_shots: ""
    amp_faces: ""
    frame_seconds: 10
    frame_quantity: 0
    number_of_columns: 4
    photo_width: 300
    margin: 10
    padding: 3
  outputs:
    contact_sheet:
      - {test: magic, mime: image/png}

- name: Contact Sheets - quantity
  tool: contact_sheets.xml
  inputs:
    input_video: video.m4v    
  params:
    type: quantity
    amp_shots: ""
    amp_faces: ""
    frame_seconds: 0
    frame_quantity: 10
    number_of_columns: 4
    photo_width: 300
    margin: 10
    padding: 3
  outputs:
    contact_sheet:
      - {test: magic, mime: image/png}


- name: Extract Audio
  tool: extract_audio.xml
  inputs:
    input_av: video.m4v
  outputs:
    audio_extracted:
      - {test: ffprobe, path: "streams/stream[1]", attrib: 'codec_name', value: "pcm_s16le"}
      - {test: ffprobe, path: "streams/stream[1]", attrib: 'sample_rate', value: "44100"}
      - {test: ffprobe, path: "streams/stream[1]", attrib: 'channels', value: "1"}
      - {test: ffprobe, path: "format", attrib: "format_name", value: "wav"}
  params:    
    rate: 44100
    channels: 1
    sample_size: pcm_s16le

- name: INA Speech Segmenter
  tool: ina_speech_segmenter.xml
  inputs:
    input_audio: audio.mp3
  outputs:
    amp_segments:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: [segments, silence, gender, start, end]}

- name: Kaldi
  tool: kaldi.xml
  inputs:
    input_audio: audio.mp3
  outputs:
    kaldi_transcript_text:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: "celebration of specialness"}
    kaldi_transcript_json:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: "duration"}
    amp_transcript:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: "celebration of specialness"}


- name: PyScene Detect
  tool: pyscenedetect.xml
  inputs:
    input_video: video.m4v
  params:
    threshold: 30
  outputs:
    amp_shots:
      - {test: magic, mime: text/plain}
      - {test: json, path: shots/i0/type, value: shot}
      - {test: json, path: shots/i0/start, value: "0.0"}
    frame_stats:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: [Frame Number, Timecode, content_val, delta_hue, delta_lum, delta_sat]}

- name: Remove Trailing Silence
  tool: remove_trailing_silence.xml
  inputs:
    input_av: audio.mp3
  outputs:
    audio_trimed:
      - {test: ffprobe, path: "format", attrib: "format_name", value: "wav"}
      - {test: ffprobe, path: "format", attrib: "duration", value: "42.994875"}
    
- name: Spacy
  tool: spacy.xml
  inputs:
    amp_transcript: amp_transcript_aws.json
  params:
    ignore_types: QUANTITIES
  outputs:
    spacy_entities:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: [sents, tokens]}
    amp_entities:
      - {test: magic, mime: text/plain}
      - {test: strings, strings: [media, entities]}


- name: Tesseract
  tool: tesseract.xml
  inputs:
    input_video: video.m4v
  outputs:
    amp_vocr:
      - {test: magic, mime: text/plain}
      - {test: size, size: 61388}      
      - {test: strings, strings: ["TRUE", "STORIES", "VIRGIL"]}


- name: VOCR to CSV
  tool: vocr_to_csv.xml
  skip: This was broken in the pre-refactored code, and remains so now.
  inputs:
    amp_vocr: vocr.json
  outputs:
    amp_vocr_csv:
      - {test: magic, mime: text/plain}
      # probably should add more tests when this actually works...


